{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Dicas de Django ! \u00b6 Tutorial com imagens","title":"Home"},{"location":"#dicas-de-django","text":"Tutorial com imagens","title":"Dicas de Django !"},{"location":"imagem/","text":"Imagens com Django e Django Rest Framework \u00b6 Ajustes para usar corretamento imagem com Django e o Django Rest Framework Imagens com Django \u00b6 Antes de tudo \u00e9 preciso fazer alguns ajuses na aplica\u00e7\u00e3o para utilizar as imagens da maneira correta com o django. Adicionar MEDIA_URL e MEDIA_ROOT no arquivo settings.py Adicionar MEDIA_URL e MEDIA_ROOT nas urlpatterns do arquivo urls.py do project. Settings.py \u00b6 Adicione as seguinte vari\u00e1veis de configura\u00e7\u00e3o no seu settings: 1 2 MEDIA_URL = '/pasta_para_guardar_arquivos/' MEDIA_ROOT = os . path . join ( BASE_DIR , 'pasta_para_guardar_arquivos' ) MEDIA_URL : nome da pasta onde ser\u00e1 guardada as imagens, os v\u00eddeos e os arquivos que forem feito upload para o reposit\u00f3rio. MEDIA_ROOT : caminho absoluto para a pasta MEDIA_URL O seu reposit\u00f3rio ficar\u00e1 com a seguinte estrutura 1 2 3 4 5 6 7 8 9 10 11 12 13 14 - repositorio - projeto - settings.py ... - app - models.py ... - pasta_para_guardar_arquivos ... - manage.py Onde pasta_para_guardar_arquivos ser\u00e1 o diret\u00f3rio para armazenar todos os arquivos que forem feito upload. Urls.py \u00b6 Concatene com a lista o seguintes comando: static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT) Veja: 1 2 3 4 5 6 7 8 9 10 11 # importa funcao static do django from django.conf.urls.static import static # importa as variaveis do arquivo settings.py from django.conf import settings urlpatterns = [ path ( '' , views ), ] + static ( settings . MEDIA_URL , document_root = settings . MEDIA_ROOT ) # concatena as rotas para acessar as imagens no servidor Models.py \u00b6 Adicionar campo de imagem ao Model 1 2 3 4 5 from django.db import models class ModelComImagem ( models . Model ): imagem = models . ImageField ( upload_to = 'pasta_das_imagens/' ) o atributo upload_to recebe como par\u00e2metro uma string com o nome da pasta de destino. Esta pasta ser\u00e1 localizada dentro da pasta MEDIA_URL configurada nos settings.py . Ao salvar uma imagem voc\u00ea ter\u00e1 o seguinte diret\u00f3rio: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 - repositorio - projeto - settings.py ... - app - models.py ... - pasta_para_guardar_arquivos - pasta_das_imagens - imagem 1 .jpg ... - manage.py J\u00e1 que a string ser\u00e1 concatenada com a MEDIA_URL , \u00e9 poss\u00edvel criar subdiret\u00f3rios para upload_to . Por exemplo, imagine que sejam imagens de perfil do usu\u00e1rio, voc\u00ea pode fazer da seguinte forma: 1 2 3 4 5 from django.db import models class ModelComImagem ( models . Model ): imagem = models . ImageField ( upload_to = 'perfil/pasta_das_imagens/' ) Agora, ao salvar voc\u00ea ter\u00e1 o seguinte diret\u00f3rio: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 - repositorio - projeto - settings.py ... - app - models.py ... - pasta_para_guardar_arquivos - perfil - pasta_das_imagens - imagem 1 .jpg ... ... - manage.py","title":"Imagens"},{"location":"imagem/#imagens-com-django-e-django-rest-framework","text":"Ajustes para usar corretamento imagem com Django e o Django Rest Framework","title":"Imagens com Django e Django Rest Framework"},{"location":"imagem/#imagens-com-django","text":"Antes de tudo \u00e9 preciso fazer alguns ajuses na aplica\u00e7\u00e3o para utilizar as imagens da maneira correta com o django. Adicionar MEDIA_URL e MEDIA_ROOT no arquivo settings.py Adicionar MEDIA_URL e MEDIA_ROOT nas urlpatterns do arquivo urls.py do project.","title":"Imagens com Django"},{"location":"imagem/#settingspy","text":"Adicione as seguinte vari\u00e1veis de configura\u00e7\u00e3o no seu settings: 1 2 MEDIA_URL = '/pasta_para_guardar_arquivos/' MEDIA_ROOT = os . path . join ( BASE_DIR , 'pasta_para_guardar_arquivos' ) MEDIA_URL : nome da pasta onde ser\u00e1 guardada as imagens, os v\u00eddeos e os arquivos que forem feito upload para o reposit\u00f3rio. MEDIA_ROOT : caminho absoluto para a pasta MEDIA_URL O seu reposit\u00f3rio ficar\u00e1 com a seguinte estrutura 1 2 3 4 5 6 7 8 9 10 11 12 13 14 - repositorio - projeto - settings.py ... - app - models.py ... - pasta_para_guardar_arquivos ... - manage.py Onde pasta_para_guardar_arquivos ser\u00e1 o diret\u00f3rio para armazenar todos os arquivos que forem feito upload.","title":"Settings.py"},{"location":"imagem/#urlspy","text":"Concatene com a lista o seguintes comando: static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT) Veja: 1 2 3 4 5 6 7 8 9 10 11 # importa funcao static do django from django.conf.urls.static import static # importa as variaveis do arquivo settings.py from django.conf import settings urlpatterns = [ path ( '' , views ), ] + static ( settings . MEDIA_URL , document_root = settings . MEDIA_ROOT ) # concatena as rotas para acessar as imagens no servidor","title":"Urls.py"},{"location":"imagem/#modelspy","text":"Adicionar campo de imagem ao Model 1 2 3 4 5 from django.db import models class ModelComImagem ( models . Model ): imagem = models . ImageField ( upload_to = 'pasta_das_imagens/' ) o atributo upload_to recebe como par\u00e2metro uma string com o nome da pasta de destino. Esta pasta ser\u00e1 localizada dentro da pasta MEDIA_URL configurada nos settings.py . Ao salvar uma imagem voc\u00ea ter\u00e1 o seguinte diret\u00f3rio: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 - repositorio - projeto - settings.py ... - app - models.py ... - pasta_para_guardar_arquivos - pasta_das_imagens - imagem 1 .jpg ... - manage.py J\u00e1 que a string ser\u00e1 concatenada com a MEDIA_URL , \u00e9 poss\u00edvel criar subdiret\u00f3rios para upload_to . Por exemplo, imagine que sejam imagens de perfil do usu\u00e1rio, voc\u00ea pode fazer da seguinte forma: 1 2 3 4 5 from django.db import models class ModelComImagem ( models . Model ): imagem = models . ImageField ( upload_to = 'perfil/pasta_das_imagens/' ) Agora, ao salvar voc\u00ea ter\u00e1 o seguinte diret\u00f3rio: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 - repositorio - projeto - settings.py ... - app - models.py ... - pasta_para_guardar_arquivos - perfil - pasta_das_imagens - imagem 1 .jpg ... ... - manage.py","title":"Models.py"}]}